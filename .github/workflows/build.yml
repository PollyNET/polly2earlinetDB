name: Build

on: 
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.7, 3.6, 3.5]

    steps:
    - uses: actions/checkout@master

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
  
    - uses: actions/cache@v1
      if: startsWith(${{ matrix.os }}, 'ubuntu')
      with:
        path: ~/.cache/pip
        key: ${{ matrix.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-pip-

    - uses: actions/cache@v1
      if: startsWith(${{ matrix.os }}, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ matrix.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-pip-

    - uses: actions/cache@v1
      if: startsWith(${{ matrix.os }}, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ matrix.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-pip-

    - name: Install dependencies
      run: |
        python setup.py install
        pip install pycodestyle -y

    - name: Lint with pycodestyle
      run: |
        pycodestyle --max-line-length=80 --max-doc-length=80 src/*.py

    - name: Test with unittest
      run: |
        python -m unittest discover -s tests
